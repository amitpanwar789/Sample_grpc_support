// Copyright 2015 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.helloworld";
option java_outer_classname = "HelloWorldProto";
option objc_class_prefix = "HLW";

package helloworld;

// The greeting service definition.
service Greeter {
  // Sends a greeting
  //rpc SayHello (HelloRequest) returns (HelloReply) {}
  rpc SayMix(MixRequest) returns (HelloReply) {}
}

// The request message containing the user's name.
// message HelloRequest {
//   string name = 1;
//   int32 age = 2;
//   string address = 3;
// }

message MixRequest {
    // Numeric Types
    double double_field = 1; // 123.45
    float float_field = 2; // 67.89
    int32 int32_field = 3; // 12345
    int64 int64_field = 4; // 9876543210L
    uint32 uint32_field = 5; // 54321
    uint64 uint64_field = 6; //54332523521L
    sint32 sint32_field = 7; // -50  
    sint64 sint64_field = 8; //-9999999999L
    fixed32 fixed32_field = 9;  // 10000
    fixed64 fixed64_field = 10; // 23523523532L
    sfixed32 sfixed32_field = 11; // -200
    sfixed64 sfixed64_field = 12; // -88888888L
    bool bool_field = 13; // 1

    // Textual Types
    string string_field = 14; // Hello, Protobuf!
    //bytes bytes_field = 15;

    // Example of an enumeration
    enum Status {
        UNKNOWN = 0;
        SUCCESS = 1;
        IN_PROGRESS = 2;
        ERROR = 3;
    }
    Status status = 16; // 1

    // Example of a nested message
    message Address {
        string street = 1;
        string city = 2;
        string zip_code = 3;
    }
    Address shipping_address = 17;  // street: "123 Main St" city: "Mycity" zip_code: "12345"
    message Abcd {
        string a = 1;
        string b = 2;
        string c = 3;
        string d = 4;
    }
    Abcd abcd = 18; // a: "a" b: "b" c: "c" d: "d"
    repeated string repeated_field = 19; // ["a", "b", "c", "d"]
    repeated int32 repeated_int32_field = 20 [packed=true]; // [1, 2, 3, 4]

}

// message RepeatHelloRequest {
//   string name = 1;
//   int32 count = 2;
// }



// The response message containing the greetings
message HelloReply {
  string message = 1;
}
